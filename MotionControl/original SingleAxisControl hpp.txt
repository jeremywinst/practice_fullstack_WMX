#ifndef SINGLE_AXIS_CONTROL_HPP
#define SINGLE_AXIS_CONTROL_HPP

#include "AdvancedMotionApi.h"
#include "ApiBufferApi.h"
#include "CompensationApi.h"
#include "CoreMotionApi.h"
#include "CyclicBufferApi.h"
#include "EventApi.h"
#include "IOApi.h"
#include "LogApi.h"
#include "UserMemoryApi.h"
#include "WMX3Api.h"

using namespace wmx3Api;

extern int err;
extern char errString[256];

extern WMX3Api wmxlib;
extern CoreMotion wmxlib_cm;
extern Io wxmlib_io;
extern CoreMotionStatus st;
extern Motion::PosCommand pos;

class WMXMain {
public:
	void Init();
	void Exit();
};

class MotorControl {
public:
	void ServoOn(int axis);
	void ServoOff(int axis);
	void AlarmReset();
	void MoveAbs(int axis, ProfileType::T type, double vel, int acc, int dec, double target);
	void MoveRel(int axis, ProfileType::T type, double vel, int acc, int dec, double target);
	void Stop(int axis);
	void GoToHome();
};

class InputHandler {
public:
	void GetInputChannel(int chNum, WORD *data);
	void GetInputChannelArr(int chStart, int chSize, WORD *data);
};

class OutputHandler {
public:
	void GetOutputChannel(int chNum, WORD *data);
	void GetOutputChannelArr(int chStart, int chSize, WORD *data);
	void SetOutputBit(int outch, int outbit, int outvalue);
	void SetOutputChannel(int cnNum, WORD data);
};




#endif // !SINGLE_AXIS_CONTROL_HPP
